plot(Wind,Ozone,main="Ozone and Wind")
plot(Solar.R,Ozone,main="Ozone and Solar Radiation")
})
par(mfrow=c(1,3),mar=c(4,4,2,1),oma=c(0,0,2,0))
with(airquality, {
plot(Wind,Ozone,main="Ozone and Wind")
plot(Solar.R,Ozone,main="Ozone and Solar Radiation")
plot(Temp,Ozone,main="Ozone and Temperature")
})
with(airquality, {
plot(Wind,Ozone,main="Ozone and Wind")
plot(Solar.R,Ozone,main="Ozone and Solar Radiation")
plot(Temp,Ozone,main="Ozone and Temperature")
mtext("Ozone and Weather in NYC")
})
par(mfrow=c(1,3),mar=c(4,4,2,1),oma=c(0,0,2,0))
with(airquality, {
plot(Wind,Ozone,main="Ozone and Wind")
plot(Solar.R,Ozone,main="Ozone and Solar Radiation")
plot(Temp,Ozone,main="Ozone and Temperature")
mtext("Ozone and Weather in NYC")
})
par(mfrow=c(1,3),mar=c(4,4,2,1),oma=c(0,0,2,0))
with(airquality, {
plot(Wind,Ozone,main="Ozone and Wind")
plot(Solar.R,Ozone,main="Ozone and Solar Radiation")
plot(Temp,Ozone,main="Ozone and Temperature")
mtext("Ozone and Weather in NYC",outer=TRUE)
})
?mtext
?text
windows()
?Device
?device
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
pdf(file="myplot.pdf")
with(faithful,plot(eruptions,waiting))
pdf(file="myplot.pdf")
dev.off()
dev.off()
dev.off()
pdf(file="myplot.pdf")
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.off()
dev.cur()
dev.off()
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.copy(png,file="geyserplot.png")
dev.off
dev.off()
dev.off()
?clear
??clear
household_power_consumption <- read.csv("C:/Users/prolaznik/Dropbox/Development/R/household_power_consumption.txt", sep=";")
View(household_power_consumption)
?subset
data<-subset(data,(Data$Date=="01/02/2007" || Data$Date=="02/02/2007"))
data<-subset(household_power_consumption,(household_power_consumption$Date=="01/02/2007" || household_power_consumption$Date=="02/02/2007"))
data<-subset(household_power_consumption,(household_power_consumption$Date=="01/02/2007" | household_power_consumption$Date=="02/02/2007"))
data<-household_power_consumption[household_power_consumption$Date=="01/02/2007" || household_power_consumption$Date=="02/02/2007",]
data<-household_power_consumption[(household_power_consumption$Date=="01/02/2007" || household_power_consumption$Date=="02/02/2007"),]
data<-household_power_consumption[household_power_consumption$Date=="01/02/2007",]
str(data)
q()
str(household_power_consumption$Date)
head(household_power_consumption$Date)
subset(household_power_consumption$Date,household_power_consumption$Date=="02/01/2007")
subset(household_power_consumption$Date,household_power_consumption$Date=="02/02/2007")
subset(household_power_consumption$Date,household_power_consumption$Date=="2/2/2007")
data<-household_power_consumption[(household_power_consumption$Date=="1/2/2007" || household_power_consumption$Date=="2/2/2007"),]
data<-household_power_consumption[(household_power_consumption$Date=="1/2/2007" | household_power_consumption$Date=="2/2/2007"),]
str(data$Date)
table(data$Date)
?table
?xtabs
table(unclass(data$Date))
factor(data$Date)
names(data)
setwd(dir="C:/Users//prolaznik//Dropbox//Development//GitHub//ExData_Plotting1")
wd()
setwd()
get(wd)
getwd()
names(data)
hist(data[,3],col=red,main="Global Active Power")
hist(data[,3],col="red",main="Global Active Power")
hist(data$Global_active_power,col="red",main="Global Active Power")
?hist
data$Global_active_power
?read.csv
?colClasses
household_power_consumption<-read.csv("./household_power_consumption.txt",sep=";",colClass=c("factor","factor","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
household_power_consumption<-read.csv("./household_power_consumption.txt",sep=";",colClasses=c("factor","factor","numeric","numeric","numeric","numeric","numeric","numeric","numeric"))
hist(data$Global_active_power,col="red",main="Global Active Power")
as.numeric(data$Global_active_power)
as.numeric(as.character(data$Global_active_power))
gap<-as.numeric(as.character(data$Global_active_power))
hist(gap,col="red",main="Global Active Power")
hist(gap,col="red",main="Global Active Power",xlab="Global Active Power (kilowatts)")
?hist
hist(gap,col="red",main="Global Active Power",xlab="Global Active Power (kilowatts)")
dev.copy(png,file="plot1.png")
dev.off()
hist(gap,col="orange",main="Global Active Power",xlab="Global Active Power (kilowatts)")
hist(gap,col="wine",main="Global Active Power",xlab="Global Active Power (kilowatts)")
hist(gap,col="red",main="Global Active Power",xlab="Global Active Power (kilowatts)")
?par
?par(col)
colors()
grep("orange",colors())
colors[grep("orange"),colors()]
colors[grep("orange"),colors(),]
as.data.frame(colors[grep("orange"),colors(),])
as.data.frame(colors)[grep("orange"),colors(),]
as.data.frame(colors())[grep("orange"),colors(),]
as.data.frame(colors())[grep("orange"),colors(),1]
as.data.frame(colors())[grep("orange"),colors()]
colors
colors()
hist(gap,col="orangered",main="Global Active Power",xlab="Global Active Power (kilowatts)")
hist(gap,col="red",main="Global Active Power",xlab="Global Active Power (kilowatts)")
?dev.off()
source(plot1.R)
source("plot1.R")
plot(t, data$Sub_metering_1, type="l", xlab="", ylab="Global Active Power (kilowatts)",axes=F )
plot(data$Time, data$Sub_metering_1, type="l", xlab="", ylab="Global Active Power (kilowatts)",axes=F )
?strptime
data$datetime<-strptime(paste(as.character(data$Date),as.character(data$Time)),"%d")
plot(data$datetime, data$Sub_metering_1, type="l", xlab="", ylab="Global Active Power (kilowatts)",axes=F )
plot(data$datetime, as.numeric(as.character(data$Sub_metering_1)), type="l", xlab="", ylab="Global Active Power (kilowatts)",axes=F )
plot(data$datetime, gap, type="l", xlab="", ylab="Global Active Power (kilowatts)",axes=F )
data$datetime
data$datetime<-strptime(paste(as.character(data$Date),as.character(data$Time)),"%d/%m/%Y %H:%M")
data$datetime
?type
typeof(data$datetime)
as.POSIXct(data$datetime)
typeof(as.POSIXct(data$datetime))
data$datetime<-strptime(paste(as.POSIXct(data$Date),as.as.POSIXct(data$Time)),"%d/%m/%Y %H:%M")
data$datetime<-strptime(paste(as.POSIXct(data$Date),as.POSIXct(data$Time)),"%d/%m/%Y %H:%M")
data$datetime<-strptime(paste(as.POSIXct(as.character(data$Date)),as.POSIXct(as.character((data$Time))),"%d/%m/%Y %H:%M")
)
data$datetime<-strptime(paste(as.character(data$Date),as.character(data$Time)),"%d/%m/%Y %H:%M")
typeof(as.POSIXct(data$datetime[1]))
data$datetime<-strptime(paste(as.character(data$Date),as.character(data$Time)),"%a")
data$datetime
data$datetime<-as.POSIXlt(strptime(paste(as.character(data$Date),as.character(data$Time)),"%a"))
data$datetime
data$datetime<-as.POSIXlt(strptime(paste(as.character(data$Date),as.character(data$Time)),format="%a"))
data$datetime
data$datetime<-strptime(paste(as.character(data$Date),as.character(data$Time)),"%d/%m/%Y %H:%M")
data$datetime
Sys.time()
?plot
data$gap<-as.numeric(as.character(data$Global_active_power))
data$datetime<-strptime(paste(as.character(data$Date),as.character(data$Time)),"%d/%m/%Y %H:%M")
plot(data$datetime,data$gap,type="l")
Sys.setlocale("LC_TIME","C")
data$gap<-as.numeric(as.character(data$Global_active_power))
data$datetime<-strptime(paste(as.character(data$Date),as.character(data$Time)),"%d/%m/%Y %H:%M")
plot(data$datetime,data$gap,type="l")
data$gap<-as.numeric(as.character(data$Global_active_power))
data$datetime<-strptime(paste(as.character(data$Date),as.character(data$Time)),"%d/%m/%Y %H:%M")
plot(data$datetime,data$gap,type="l",xlab="Global active power (kilowatts)")
data$gap<-as.numeric(as.character(data$Global_active_power))
data$datetime<-strptime(paste(as.character(data$Date),as.character(data$Time)),"%d/%m/%Y %H:%M")
plot(data$datetime,data$gap,type="l",ylab="Global active power (kilowatts)")
data$gap<-as.numeric(as.character(data$Global_active_power))
data$datetime<-strptime(paste(as.character(data$Date),as.character(data$Time)),"%d/%m/%Y %H:%M")
plot(data$datetime,data$gap,type="l",ylab="Global active power (kilowatts)",xlab="")
source("plot2.R")
data$submeter_1<-as.numeric(as.character(data$Sub_metering_1))
data$submeter_2<-as.numeric(as.character(data$Sub_metering_2))
data$submeter_3<-as.numeric(as.character(data$Sub_metering_2))
plot(data$datetime, data$Sub_metering_1, type="l", xlab="", ylab="Global Active Power (kilowatts)",axes=F )
plot(data$datetime,datasubmeter_1,type="l")
plot(data$datetime,data$submeter_1,type="l")
plot(data$datetime,data$submeter_2,type="l")
with(data,plot(datetime,submeter_1))
with(data,plot(datetime,submeter_1,typle="l"))
with(data,plot(datetime,submeter_1,type="l"))
par(new=TRUE)
plot(data$datetime,data$submeter_2,type="l")
with(data,plot(datetime,submeter_1,type="l"),ylim=range(c(0,30)))
plot(data$datetime,data$submeter_2,type="l",ylim=range(c(0,30)))
plot(data$datetime,data$submeter_3,type="l",ylim=range(c(0,30)))
plot(data$datetime,data$submeter_1,type="l",ylim=range(c(0,30)))
par(new=TRUE)
plot(data$datetime,data$submeter_2,type="l",ylim=range(c(0,30)))
par(new=TRUE)
plot(data$datetime,data$submeter_3,type="l",ylim=range(c(0,30)))
data$submeter_1<-as.numeric(as.character(data$Sub_metering_1))
data$submeter_2<-as.numeric(as.character(data$Sub_metering_2))
data$submeter_3<-data$Sub_metering_3
plot(data$datetime,data$submeter_3,type="l",ylim=range(c(0,30)))
plot(data$datetime,data$submeter_1,type="l",ylim=range(c(0,30)))
plot(data$datetime,data$submeter_1,type="l",ylim=range(c(0,40)))
plot(data$datetime,data$submeter_1,type="l",ylim=range(c(0,39)))
plot(data$datetime,data$submeter_1,type="l",ylim=range(c(0,40)))
?plot
plot(data$datetime,data$submeter_1,type="l",ylim=range(c(0,40)),ylabe="")
plot(data$datetime,data$submeter_1,type="l",ylim=range(c(0,40)),ylab="",xlab="")
plot(data$datetime,data$submeter_1,type="l",ylim=range(c(0,40)),ylab="",xlab="",axes=FALSE)
plot(data$datetime,data$submeter_1,type="l",ylim=range(c(0,40)),ylab="",xlab="")
plot(data$datetime,data$submeter_1,type="l",ylim=range(c(0,40)),ylab="",xlab="")
axis(2,at=c(0,10,20,30))
plot(data$datetime,data$submeter_1,type="l",ylim=range(c(0,40)),ylab="",xlab="",yaxis=c(0,10,20,30))
plot(data$datetime,data$submeter_1,type="l",ylim=range(c(0,40)),ylab="",xlab="",at=c(0,10,20,30))
plot(data$datetime,data$submeter_1,type="l",ylim=range(c(0,40)),ylab="",xlab="",yt=c(0,10,20,30))
plot(data$datetime,data$submeter_1,type="l",ylim=range(c(0,40)),ylab="",xlab="",ytlab=c(0,10,20,30))
plot(data$datetime,data$submeter_1,type="l",ylim=range(c(0,40)),ylab="",xlab="",yt=c(0,10,20,30),ytlab=c(0,10,20,30))
warnings()
par(new=TRUE,yaxp=c(0,10,20,30))
plot(data$datetime,data$submeter_1,type="l",ylim=range(c(0,40)),axes=FALSE)
plot(data$datetime,data$submeter_1,type="l",ylim=range(c(0,40)),axes=FALSE,xlab="",ylab="")
plot(data$datetime,data$submeter_1,type="l",ylim=range(c(0,40)),axes=FALSE,xlab="",ylab="")
#this is to make it overwrite
par(new=TRUE)
plot(data$datetime,data$submeter_2,type="l",ylim=range(c(0,40)),axes=FALSE,xlab="",ylab="",col="red")
par(new=TRUE)
plot(data$datetime,data$submeter_3,type="l",ylim=range(c(0,40)),yaxt="n",xlab="",ylab="",col="blue")
par(new=TRUE)
axis(side=2,at=c(0,10,20,30))
#We retrieve the submetering data and date/time and convert the data type from factor to numeric
data$submeter_1<-as.numeric(as.character(data$Sub_metering_1))
data$submeter_2<-as.numeric(as.character(data$Sub_metering_2))
data$submeter_3<-data$Sub_metering_3
#We append the date time data using strptime and format approprately
data$datetime<-strptime(paste(as.character(data$Date),as.character(data$Time)),"%d/%m/%Y %H:%M",ylab="Energy sub metering")
#We will draw three plots over each other - one for each submetering
axis(side=2,at=c(0,10,20,30))
plot(data$datetime,data$submeter_1,type="l",ylim=range(c(0,40)),axes=FALSE,xlab="",ylab="")
#this is to make it overwrite
par(new=TRUE)
plot(data$datetime,data$submeter_2,type="l",ylim=range(c(0,40)),axes=FALSE,xlab="",ylab="",col="red")
par(new=TRUE)
plot(data$datetime,data$submeter_3,type="l",ylim=range(c(0,40)),yaxt="n",xlab="",ylab="",col="blue")
par(new=TRUE)
plot(data$datetime,data$submeter_1,type="l",ylim=range(c(0,40)),axes=FALSE,xlab="",ylab="")
#this is to make it overwrite
par(new=TRUE)
plot(data$datetime,data$submeter_2,type="l",ylim=range(c(0,40)),axes=FALSE,xlab="",ylab="",col="red")
par(new=TRUE)
plot(data$datetime,data$submeter_3,type="l",ylim=range(c(0,40)),yaxt="n",xlab="",ylab="Energy sub metering",col="blue")
par(new=TRUE)
axis(side=2,at=c(0,10,20,30))
?legend
legend("topright",col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
legend("topright",pch=-,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
legend("topright",pch="-",col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
legend("topright",pch="-----",col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
?pch
legend("topright",lwd="2",col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
legend("topright",lwd="1",col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
source("plot3.R")
source("plot3.R")
?dev.copy
source("plot3.R")
source("plot1.R")
source("plot2.R")
source("plot1.R")
source("plot1.R")
source("plot2.R")
source("plot3.R")
data$gap<-as.numeric(as.character(data$Global_active_power))
data$submeter_1<-as.numeric(as.character(data$Sub_metering_1))
data$submeter_2<-as.numeric(as.character(data$Sub_metering_2))
data$submeter_3<-data$Sub_metering_3
data$volt<-as.numeric(as.character(data$Voltage))
data$grp<-as.as.numeric(as.character(data$Global_reactive_power))
data$gap<-as.numeric(as.character(data$Global_active_power))
data$submeter_1<-as.numeric(as.character(data$Sub_metering_1))
data$submeter_2<-as.numeric(as.character(data$Sub_metering_2))
data$submeter_3<-data$Sub_metering_3
data$volt<-as.numeric(as.character(data$Voltage))
data$grp<-as.numeric(as.character(data$Global_reactive_power))
##For this to work, you need to
#1. Download the data from here:
#   https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip
#2. Unzip it into your working folder.
##If all steps were followed, you should have a .txt file named 'household_power_consumption.txt" in your working folder
##First we load the data  into R
household_power_consumption <- read.csv("./household_power_consumption.txt", sep=";")
#We subset it to the wanted dates - '1/2/2007' or '2/2/2007'
data<-household_power_consumption[(household_power_consumption$Date=="1/2/2007" | household_power_consumption$Date=="2/2/2007"),]
#We retrieve the Global_active_power data, voltage, submetering data and date/time and convert the data type from factor to numeric
data$gap<-as.numeric(as.character(data$Global_active_power))
data$submeter_1<-as.numeric(as.character(data$Sub_metering_1))
data$submeter_2<-as.numeric(as.character(data$Sub_metering_2))
data$submeter_3<-data$Sub_metering_3
data$volt<-as.numeric(as.character(data$Voltage))
data$grp<-as.numeric(as.character(data$Global_reactive_power))
#We append the date time data using strptime and format approprately
data$datetime<-strptime(paste(as.character(data$Date),as.character(data$Time)),"%d/%m/%Y %H:%M")
#we start the png device
png(filename="plot4.png",width=480,height=480)
par(mfrow=c(2,2))
#We make the histogram, colored red, main title Global active power, with x axis label
with(data, hist(gap,col="red",main="Global Active Power",xlab="Global Active Power (kilowatts)")
##For this to work, you need to
#1. Download the data from here:
#   https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip
#2. Unzip it into your working folder.
##If all steps were followed, you should have a .txt file named 'household_power_consumption.txt" in your working folder
##First we load the data  into R
household_power_consumption <- read.csv("./household_power_consumption.txt", sep=";")
#We subset it to the wanted dates - '1/2/2007' or '2/2/2007'
data<-household_power_consumption[(household_power_consumption$Date=="1/2/2007" | household_power_consumption$Date=="2/2/2007"),]
#We retrieve the Global_active_power data, voltage, submetering data and date/time and convert the data type from factor to numeric
data$gap<-as.numeric(as.character(data$Global_active_power))
data$submeter_1<-as.numeric(as.character(data$Sub_metering_1))
data$submeter_2<-as.numeric(as.character(data$Sub_metering_2))
data$submeter_3<-data$Sub_metering_3
data$volt<-as.numeric(as.character(data$Voltage))
data$grp<-as.numeric(as.character(data$Global_reactive_power))
#We append the date time data using strptime and format approprately
data$datetime<-strptime(paste(as.character(data$Date),as.character(data$Time)),"%d/%m/%Y %H:%M")
#we start the png device
png(filename="plot4.png",width=480,height=480)
par(mfrow=c(2,2))
#We make the histogram, colored red, main title Global active power, with x axis label
with(data,
c
c
c
par(mfrow=c(2,2))
#We make the histogram, colored red, main title Global active power, with x axis label
with(data, {
plot(data$datetime,data$gap,type="l",ylab="Global Active Power (kilowatts)",xlab="")
plot(data$datetime,data$volt,type="l",ylab="Voltage",xlab="datetime",ylim=c(234,246))
})
dev.off()
dev.off()
par(mfrow=c(2,2))
#We make the histogram, colored red, main title Global active power, with x axis label
with(data, {
plot(data$datetime,data$gap,type="l",ylab="Global Active Power (kilowatts)",xlab="")
plot(data$datetime,data$volt,type="l",ylab="Voltage",xlab="datetime",ylim=c(234,246))
})
par(mfrow=c(2,2))
#We make the histogram, colored red, main title Global active power, with x axis label
with(data, {
plot(data$datetime,data$gap,type="l",ylab="Global Active Power (kilowatts)",xlab="")
plot(data$datetime,data$volt,type="l",ylab="Voltage",xlab="datetime",ylim=c(234,246))
#We will draw three plots over each other - one for each submetering
plot(data$datetime,data$submeter_1,type="l",ylim=range(c(0,40)),axes=FALSE,xlab="",ylab="")
#this is to make it overwrite
par(new=TRUE)
#and now we repeat for submeter 2, changing the color
plot(data$datetime,data$submeter_2,type="l",ylim=range(c(0,40)),axes=FALSE,xlab="",ylab="",col="red")
par(new=TRUE)
#and now we repeat for submeter 3, only we add the x axis by omitting the y, and label the y axis
plot(data$datetime,data$submeter_3,type="l",ylim=range(c(0,40)),yaxt="n",xlab="",ylab="Energy sub metering",col="blue")
par(new=TRUE)
#we add the axis and the legend
axis(side=2,at=c(0,10,20,30))
legend("topright",lwd="1",col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
})
par(mfrow=c(2,2))
#We make the histogram, colored red, main title Global active power, with x axis label
with(data, {
plot(data$datetime,data$gap,type="l",ylab="Global Active Power (kilowatts)",xlab="")
plot(data$datetime,data$volt,type="l",ylab="Voltage",xlab="datetime",ylim=c(234,246))
#We will draw three plots over each other - one for each submetering
plot(data$datetime,data$submeter_1,type="l",ylim=range(c(0,40)),axes=FALSE,xlab="",ylab="")
#this is to make it overwrite
par(new=TRUE)
#and now we repeat for submeter 2, changing the color
plot(data$datetime,data$submeter_2,type="l",ylim=range(c(0,40)),axes=FALSE,xlab="",ylab="",col="red")
par(new=TRUE)
#and now we repeat for submeter 3, only we add the x axis by omitting the y, and label the y axis
plot(data$datetime,data$submeter_3,type="l",ylim=range(c(0,40)),yaxt="n",xlab="",ylab="Energy sub metering",col="blue")
par(new=TRUE)
#we add the axis and the legend
axis(side=2,at=c(0,10,20,30))
legend("topright",lwd="1",col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),cex=0.8)
)
)par(mfrow=c(2,2))
#We make the histogram, colored red, main title Global active power, with x axis label
with(data, {
plot(data$datetime,data$gap,type="l",ylab="Global Active Power (kilowatts)",xlab="")
plot(data$datetime,data$volt,type="l",ylab="Voltage",xlab="datetime",ylim=c(234,246))
#We will draw three plots over each other - one for each submetering
plot(data$datetime,data$submeter_1,type="l",ylim=range(c(0,40)),axes=FALSE,xlab="",ylab="")
#this is to make it overwrite
par(new=TRUE)
#and now we repeat for submeter 2, changing the color
plot(data$datetime,data$submeter_2,type="l",ylim=range(c(0,40)),axes=FALSE,xlab="",ylab="",col="red")
par(new=TRUE)
#and now we repeat for submeter 3, only we add the x axis by omitting the y, and label the y axis
plot(data$datetime,data$submeter_3,type="l",ylim=range(c(0,40)),yaxt="n",xlab="",ylab="Energy sub metering",col="blue")
par(new=TRUE)
#we add the axis and the legend
axis(side=2,at=c(0,10,20,30))
legend("topright",lwd="1",col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),cex=0.2)
par(mfrow=c(2,2))
#We make the histogram, colored red, main title Global active power, with x axis label
with(data, {
plot(data$datetime,data$gap,type="l",ylab="Global Active Power (kilowatts)",xlab="")
plot(data$datetime,data$volt,type="l",ylab="Voltage",xlab="datetime",ylim=c(234,246))
#We will draw three plots over each other - one for each submetering
plot(data$datetime,data$submeter_1,type="l",ylim=range(c(0,40)),axes=FALSE,xlab="",ylab="")
#this is to make it overwrite
par(new=TRUE)
#and now we repeat for submeter 2, changing the color
plot(data$datetime,data$submeter_2,type="l",ylim=range(c(0,40)),axes=FALSE,xlab="",ylab="",col="red")
par(new=TRUE)
#and now we repeat for submeter 3, only we add the x axis by omitting the y, and label the y axis
plot(data$datetime,data$submeter_3,type="l",ylim=range(c(0,40)),yaxt="n",xlab="",ylab="Energy sub metering",col="blue")
par(new=TRUE)
#we add the axis and the legend
axis(side=2,at=c(0,10,20,30))
legend("topright",lwd="1",col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),cex=0.2)
})
_legend
?legend
par(mfrow=c(2,2))
#We make the histogram, colored red, main title Global active power, with x axis label
with(data, {
plot(data$datetime,data$gap,type="l",ylab="Global Active Power (kilowatts)",xlab="")
plot(data$datetime,data$volt,type="l",ylab="Voltage",xlab="datetime",ylim=c(234,246))
#We will draw three plots over each other - one for each submetering
plot(data$datetime,data$submeter_1,type="l",ylim=range(c(0,40)),axes=FALSE,xlab="",ylab="")
#this is to make it overwrite
par(new=TRUE)
#and now we repeat for submeter 2, changing the color
plot(data$datetime,data$submeter_2,type="l",ylim=range(c(0,40)),axes=FALSE,xlab="",ylab="",col="red")
par(new=TRUE)
#and now we repeat for submeter 3, only we add the x axis by omitting the y, and label the y axis
plot(data$datetime,data$submeter_3,type="l",ylim=range(c(0,40)),yaxt="n",xlab="",ylab="Energy sub metering",col="blue")
par(new=TRUE)
#we add the axis and the legend
axis(side=2,at=c(0,10,20,30))
legend("topright",lwd="1",col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),cex=0.6,y.intersp=0.5)
})
par(mfrow=c(2,2))
#We make the histogram, colored red, main title Global active power, with x axis label
with(data, {
plot(data$datetime,data$gap,type="l",ylab="Global Active Power (kilowatts)",xlab="")
plot(data$datetime,data$volt,type="l",ylab="Voltage",xlab="datetime",ylim=c(234,246))
#We will draw three plots over each other - one for each submetering
plot(data$datetime,data$submeter_1,type="l",ylim=range(c(0,40)),axes=FALSE,xlab="",ylab="")
#this is to make it overwrite
par(new=TRUE)
#and now we repeat for submeter 2, changing the color
plot(data$datetime,data$submeter_2,type="l",ylim=range(c(0,40)),axes=FALSE,xlab="",ylab="",col="red")
par(new=TRUE)
#and now we repeat for submeter 3, only we add the x axis by omitting the y, and label the y axis
plot(data$datetime,data$submeter_3,type="l",ylim=range(c(0,40)),yaxt="n",xlab="",ylab="Energy sub metering",col="blue")
par(new=TRUE)
#we add the axis and the legend
axis(side=2,at=c(0,10,20,30))
legend("topright",lwd="1",col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),cex=0.6)
})
par(mfrow=c(2,2))
#We make the histogram, colored red, main title Global active power, with x axis label
with(data, {
plot(data$datetime,data$gap,type="l",ylab="Global Active Power (kilowatts)",xlab="")
plot(data$datetime,data$volt,type="l",ylab="Voltage",xlab="datetime",ylim=c(234,246))
#We will draw three plots over each other - one for each submetering
plot(data$datetime,data$submeter_1,type="l",ylim=range(c(0,40)),axes=FALSE,xlab="",ylab="")
#this is to make it overwrite
par(new=TRUE)
#and now we repeat for submeter 2, changing the color
plot(data$datetime,data$submeter_2,type="l",ylim=range(c(0,40)),axes=FALSE,xlab="",ylab="",col="red")
par(new=TRUE)
#and now we repeat for submeter 3, only we add the x axis by omitting the y, and label the y axis
plot(data$datetime,data$submeter_3,type="l",ylim=range(c(0,40)),yaxt="n",xlab="",ylab="Energy sub metering",col="blue")
#we add the axis and the legend
axis(side=2,at=c(0,10,20,30))
legend("topright",lwd="1",col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),cex=0.6,y.intersp=0.2)
})
par(mfrow=c(2,2))
#We make the histogram, colored red, main title Global active power, with x axis label
with(data, {
plot(data$datetime,data$gap,type="l",ylab="Global Active Power (kilowatts)",xlab="")
plot(data$datetime,data$volt,type="l",ylab="Voltage",xlab="datetime",ylim=c(234,246))
#We will draw three plots over each other - one for each submetering
plot(data$datetime,data$submeter_1,type="l",ylim=range(c(0,40)),axes=FALSE,xlab="",ylab="")
#this is to make it overwrite
par(new=TRUE)
#and now we repeat for submeter 2, changing the color
plot(data$datetime,data$submeter_2,type="l",ylim=range(c(0,40)),axes=FALSE,xlab="",ylab="",col="red")
par(new=TRUE)
#and now we repeat for submeter 3, only we add the x axis by omitting the y, and label the y axis
plot(data$datetime,data$submeter_3,type="l",ylim=range(c(0,40)),yaxt="n",xlab="",ylab="Energy sub metering",col="blue")
#we add the axis and the legend
axis(side=2,at=c(0,10,20,30))
legend("topright",lwd="1",col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),cex=0.3,y.intersp=0.2)
})
?legend
par(mfrow=c(2,2))
#We make the histogram, colored red, main title Global active power, with x axis label
with(data, {
plot(data$datetime,data$gap,type="l",ylab="Global Active Power (kilowatts)",xlab="")
plot(data$datetime,data$volt,type="l",ylab="Voltage",xlab="datetime",ylim=c(234,246))
#We will draw three plots over each other - one for each submetering
plot(data$datetime,data$submeter_1,type="l",ylim=range(c(0,40)),axes=FALSE,xlab="",ylab="")
par(new=TRUE)
plot(data$datetime,data$submeter_2,type="l",ylim=range(c(0,40)),axes=FALSE,xlab="",ylab="",col="red")
par(new=TRUE)
plot(data$datetime,data$submeter_3,type="l",ylim=range(c(0,40)),yaxt="n",xlab="",ylab="Energy sub metering",col="blue")
#we add the axis and the legend
axis(side=2,at=c(0,10,20,30))
legend("topright",lwd="1",col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),cex=0.3,y.intersp=0.2,bty="n")
plot(data$datetime,data$grp,type="l",ylab="Global_reactive_power",xlab="datetime",ylim=c(0.0,0.5))
})
source("plot4.R")
source("plot4.R")
